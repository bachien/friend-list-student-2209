{"version":3,"sources":["assets/icons/icon-user-plus.svg","assets/icons/icon-edit.svg","assets/icons/icon-people.svg","assets/icons/icon-trash.svg","assets/icons/icon-close.svg","assets/icons/icon-phone.svg","assets/icons/icon-home.svg","assets/icons/icon-user.svg","assets/icons/icon-face-sad.svg","components/icons/icons.tsx","components/header/header.tsx","redux/action/index.ts","components/friend-card/fiend-card.tsx","components/friend-lists/friend-lists.tsx","components/modal-friend/modal-friend.tsx","redux/reducer/data-friends.ts","redux/reducer/index.ts","redux/reducer/modal.ts","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FaceSadIcon","className","src","iconFaceSad","alt","UserIcon","iconUser","PhoneIcon","iconPhone","AddressIcon","iconAddress","UserPlusIcon","iconUserPlus","PeopleIcon","iconPeople","EditIcon","iconEdit","TrashIcon","iconTrash","Header","dispatch","useDispatch","Button","appearance","onClick","type","typeModal","FriendCard","id","name","address","phoneNumber","color","friendID","deleteFriend","FiendLists","dataFriends","useSelector","state","DataFriends","useState","dataFriendsState","changeListState","useEffect","onChange","e","friendFilter","filter","item","toLowerCase","includes","target","value","placeholder","length","map","key","ModalFriend","dataName","setDataName","dataAddress","setDataAddress","dataPhoneNumber","setDataPhoneNumber","isActive","close","console","log","submit","editFriend","Modal","backdrop","show","onHide","Title","Body","Form","onKeyPress","FormGroup","ControlLabel","Input","HelpBlock","tooltip","Footer","RootReducer","combineReducers","action","store","createStore","composeWithDevTools","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.acd480e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-user-plus.502bbf3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-edit.a097375b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-people.e884b90e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-trash.1565a539.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.dff9a821.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-phone.5f1f1fe0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-home.9db65898.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-user.cadc7e98.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-face-sad.a89abe84.svg\";","import React from 'react'\r\n\r\nimport iconUserPlus from 'assets/icons/icon-user-plus.svg';\r\nimport iconEdit from 'assets/icons/icon-edit.svg';\r\nimport iconPeople from 'assets/icons/icon-people.svg';\r\nimport iconTrash from 'assets/icons/icon-trash.svg';\r\nimport iconClose from 'assets/icons/icon-close.svg';\r\nimport iconPhone from 'assets/icons/icon-phone.svg';\r\nimport iconAddress from 'assets/icons/icon-home.svg';\r\nimport iconUser from 'assets/icons/icon-user.svg';\r\nimport iconFaceSad from 'assets/icons/icon-face-sad.svg';\r\n\r\ninterface IconType {\r\n  className?: string\r\n  onClick?: Function\r\n  white?: boolean\r\n}\r\nexport const FaceSadIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconFaceSad} className={className} alt=\"\" />\r\n);\r\nexport const UserIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconUser} className={className} alt=\"\" />\r\n);\r\nexport const PhoneIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconPhone} className={className} alt=\"\" />\r\n);\r\nexport const AddressIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconAddress} className={className} alt=\"\" />\r\n);\r\nexport const UserPlusIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconUserPlus} className={className} alt=\"\" />\r\n);\r\nexport const PeopleIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconPeople} className={className} alt=\"\" />\r\n);\r\nexport const EditIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconEdit} className={className} alt=\"\" />\r\n);\r\nexport const TrashIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconTrash} className={className} alt=\"\" />\r\n);\r\nexport const CloseIcon = ({ className }: IconType): React.ReactElement => (\r\n  <img src={iconClose} className={className} alt=\"\" />\r\n);\r\n","import React from \"react\";\r\nimport { Button } from \"rsuite\";\r\nimport \"./header.scss\";\r\nimport { PeopleIcon, UserPlusIcon } from \"components/icons/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openModal } from \"redux/action\";\r\n\r\ntype Props = {\r\n  dispatch: any;\r\n};\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"header d-flex align-items-center justify-content-between\">\r\n      <div className=\"header-item\">\r\n        <PeopleIcon />\r\n        Mah Friends\r\n      </div>\r\n      <div className=\"header-item d-flex align-items-center\">\r\n        <Button\r\n          appearance=\"primary\"\r\n          onClick={() => {\r\n            dispatch(openModal(\"add\"));\r\n          }}\r\n        >\r\n          <UserPlusIcon />\r\n          ADD\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","export const openModal = (typeModal: string) => ({\r\n  type: 'OPEN_MODAL',\r\n  typeModal\r\n})\r\n\r\nexport const closeModal = () => ({\r\n  type: 'CLOSE_MODAL',\r\n})\r\n\r\nexport const openModalEdit = (typeModal: string, friendID: number) => ({\r\n  type: 'OPEN_MODAL',\r\n  typeModal,\r\n  friendID,\r\n})\r\n\r\nexport const addFriend = (name: string, address: string, phoneNumber: string) => ({\r\n  type: 'ADD_FRIENDS',\r\n  name,\r\n  address,\r\n  phoneNumber\r\n})\r\n\r\nexport const editFriend = (id: number, name: string, address: string, phoneNumber: string) => ({\r\n  type: 'EDIT_FRIENDS',\r\n  id,\r\n  name,\r\n  address,\r\n  phoneNumber\r\n})\r\n\r\nexport const deleteFriend = (id: number) => ({\r\n  type: 'DELETE_FRIENDS',\r\n  id,\r\n})","import React from \"react\";\r\nimport \"./friend-card.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openModalEdit, deleteFriend } from \"redux/action\";\r\nimport { Button } from \"rsuite\";\r\nimport {\r\n  PhoneIcon,\r\n  AddressIcon,\r\n  UserIcon,\r\n  EditIcon,\r\n  TrashIcon,\r\n} from \"components/icons/icons\";\r\n\r\ntype Props = {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  phoneNumber: string;\r\n};\r\n\r\nconst FriendCard = ({ id, name, address, phoneNumber }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"fiend-card\">\r\n      <div className=\"fiend-card-content\">\r\n        <div className=\"d-flex align-items-center mb-4\">\r\n          <div className=\"avatar\">\r\n            <UserIcon />\r\n          </div>\r\n          <h2 className=\"name\">{name}</h2>\r\n        </div>\r\n        <p className=\"address\">\r\n          <AddressIcon />\r\n          {address}\r\n        </p>\r\n        <p className=\"phone-number d-flex align-items-center\">\r\n          <PhoneIcon />\r\n          {phoneNumber}\r\n        </p>\r\n        <div className=\"button-group d-flex justify-content-end\">\r\n          <Button\r\n            color=\"green\"\r\n            onClick={() => dispatch(openModalEdit(\"edit\", id))}\r\n          >\r\n            <EditIcon />\r\n            Edit\r\n          </Button>\r\n          <Button color=\"red\" onClick={() => dispatch(deleteFriend(id))}>\r\n            <TrashIcon />\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./friend-lists.scss\";\r\nimport FriendCard from \"components/friend-card/fiend-card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaceSadIcon } from \"components/icons/icons\";\r\nimport { RootState } from \"../../redux/reducer/index\";\r\n\r\ntype dataFriendsType = Array<{\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  phoneNumber: string;\r\n}>;\r\n\r\nconst FiendLists = () => {\r\n  const dataFriends: dataFriendsType = useSelector(\r\n    (state: RootState) => state.DataFriends\r\n  );\r\n  const [dataFriendsState, changeListState]: [dataFriendsType, any] = useState([]);\r\n\r\n  useEffect(() => {\r\n    changeListState(dataFriends);\r\n  }, [dataFriends]);\r\n\r\n  const handleInputSearch = (e: any) => {\r\n    const friendFilter: dataFriendsType = dataFriends.filter(\r\n      (item) =>\r\n        item.name.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n        item.address.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n        item.phoneNumber.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    changeListState(friendFilter);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"filter-friends\" onChange={handleInputSearch} placeholder=\"Filter friends\"></input>\r\n      <div className=\"list-friends d-flex flex-wrap \">\r\n        {dataFriendsState.length === 0 && (\r\n          <div className=\"list-null d-flex flex-md-column justify-content-center align-items-center\">\r\n            <FaceSadIcon />\r\n            <p>\r\n              Wahh.. Look like you don't have friend.. Let's add some friend now\r\n              !\r\n            </p>\r\n          </div>\r\n        )}\r\n        {dataFriendsState.length > 0 &&\r\n          dataFriendsState.map((item) => (\r\n            <FriendCard\r\n              key={item.id}\r\n              id={item.id}\r\n              name={item.name}\r\n              address={item.address}\r\n              phoneNumber={item.phoneNumber}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiendLists;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./modal-friend.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducer/index\";\r\nimport { closeModal, addFriend, editFriend } from \"redux/action\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  HelpBlock,\r\n  Input,\r\n} from \"rsuite\";\r\nimport { UserPlusIcon, EditIcon } from \"components/icons/icons\";\r\n\r\ntype dataFriend = Array<{\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  phoneNumber: string;\r\n}>;\r\n\r\ntype Props = {\r\n  typeModal: string;\r\n  isActive: boolean;\r\n  friendID: number;\r\n  dispatch: any;\r\n  dataFriends: dataFriend;\r\n};\r\n\r\nconst ModalFriend = () => {\r\n  const dispatch = useDispatch();\r\n  const [dataName, setDataName] = useState(\"\");\r\n  const [dataAddress, setDataAddress] = useState(\"\");\r\n  const [dataPhoneNumber, setDataPhoneNumber] = useState(\"\");\r\n\r\n  const typeModal: string = useSelector(\r\n    (state: RootState) => state.ModalFriend.typeModal\r\n  );\r\n\r\n   const friendID: number = useSelector(\r\n     (state: RootState) => state.ModalFriend.friendID\r\n   );\r\n   const isActive: boolean = useSelector(\r\n     (state: RootState) => state.ModalFriend.isActive\r\n   );\r\n   const dataFriends: dataFriend = useSelector(\r\n     (state: RootState) => state.DataFriends\r\n   );\r\n\r\n  const close = () => {\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeModal === \"edit\") {\r\n      setDataName(dataFriends[friendID - 1].name);\r\n      setDataAddress(dataFriends[friendID - 1].address);\r\n      setDataPhoneNumber(dataFriends[friendID - 1].phoneNumber);\r\n    }\r\n    console.log(\"run\");\r\n  }, [dataFriends, friendID, isActive, typeModal]);\r\n\r\n  const submit = () => {\r\n    if (typeModal === \"add\") {\r\n      close();\r\n      dispatch(addFriend(dataName, dataAddress, dataPhoneNumber));\r\n      setDataName(\"\");\r\n      setDataAddress(\"\");\r\n      setDataPhoneNumber(\"\");\r\n    }\r\n    if (typeModal === \"edit\") {\r\n      close();\r\n      dispatch(editFriend(friendID, dataName, dataAddress, dataPhoneNumber));\r\n      setDataName(\"\");\r\n      setDataAddress(\"\");\r\n      setDataPhoneNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-friend\">\r\n      <Modal backdrop={true} show={isActive} onHide={close}>\r\n        <Modal.Header>\r\n          {typeModal === \"add\" && (\r\n            <Modal.Title>\r\n              <UserPlusIcon />\r\n              Add Friend\r\n            </Modal.Title>\r\n          )}\r\n          {typeModal === \"edit\" && (\r\n            <Modal.Title>\r\n              <EditIcon />\r\n              Edit Friend\r\n            </Modal.Title>\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            onKeyPress={(e: any) => {\r\n              if (e.key === \"Enter\") submit();\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Name</ControlLabel>\r\n              <Input\r\n                onChange={(value) => {\r\n                  setDataName(value);\r\n                }}\r\n                value={dataName}\r\n                name=\"name\"\r\n                type=\"text\"\r\n              />\r\n              <HelpBlock tooltip>Required</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Address</ControlLabel>\r\n              <Input\r\n                onChange={(value) => {\r\n                  setDataAddress(value);\r\n                }}\r\n                value={dataAddress}\r\n                name=\"name\"\r\n                type=\"text\"\r\n              />\r\n              <HelpBlock tooltip>Required</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Phone Number</ControlLabel>\r\n              <Input\r\n                onChange={(value) => {\r\n                  setDataPhoneNumber(value);\r\n                }}\r\n                value={dataPhoneNumber}\r\n                name=\"name\"\r\n                type=\"text\"\r\n              />\r\n              <HelpBlock tooltip>Required</HelpBlock>\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {typeModal === \"add\" && (\r\n            <Button onClick={submit} appearance=\"primary\">\r\n              Add Friend\r\n            </Button>\r\n          )}\r\n          {typeModal === \"edit\" && (\r\n            <Button onClick={submit} appearance=\"primary\">\r\n              Save\r\n            </Button>\r\n          )}\r\n          <Button onClick={close} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalFriend;\r\n","type State = Array<{\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  phoneNumber: string;\r\n}>;\r\n\r\ntype Action = {\r\n  type: string;\r\n  number: number;\r\n  name: string;\r\n  address: string;\r\n  phoneNumber: string;\r\n  id: number;\r\n};\r\n\r\nconst dataFriends = [\r\n  {\r\n    id: 1,\r\n    name: \"Albert B Oliphant\",\r\n    address: \"122  Drainer Avenue\",\r\n    phoneNumber: \"712-341-8415\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sharon E Garcia\",\r\n    address: \"540  Jacobs Street\",\r\n    phoneNumber: \"412-240-3536\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"David H Olmos\",\r\n    address: \"329  Emily Renzelli Boulevard\",\r\n    phoneNumber: \"831-636-9428\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"George L Pedroza\",\r\n    address: \"287  Robinson Lane\",\r\n    phoneNumber: \"740-210-2950\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Jose A Goforth\",\r\n    address: \"1161  Stoney Lane\",\r\n    phoneNumber: \"972-933-9459\",\r\n  },\r\n];\r\n\r\nexport const DataFriends = (state: State = dataFriends, action: Action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FRIENDS\":\r\n      return state;\r\n    case \"EDIT_FRIENDS\":\r\n      return state;\r\n    case \"DELETE_FRIENDS\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { ModalFriend } from \"redux/reducer/modal\";\r\nimport { DataFriends } from \"redux/reducer/data-friends\";\r\n\r\nexport const RootReducer = combineReducers({\r\n  ModalFriend,\r\n  DataFriends,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof RootReducer>;\r\n","type Action = {\r\n  type: string,\r\n  typeModal: string,\r\n  friendID: number,\r\n}\r\n\r\nexport const ModalFriend = (state = {isActive: false, typeModal: '', friendID: 0}, action: Action)  => {\r\n  switch (action.type) {\r\n    case 'OPEN_MODAL': \r\n      return state = {\r\n        isActive: true,\r\n        typeModal: action.typeModal,\r\n        friendID: action.friendID,\r\n      }\r\n    case 'CLOSE_MODAL': \r\n      return state = {\r\n        isActive: false,\r\n        typeModal: '',\r\n        friendID: action.friendID,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react'\r\nimport './app.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'rsuite/dist/styles/rsuite-default.css'\r\n\r\nimport Header from 'components/header/header'\r\nimport FriendLists from 'components/friend-lists/friend-lists'\r\nimport ModalFriend from 'components/modal-friend/modal-friend'\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { RootReducer } from 'redux/reducer';\r\n\r\nconst store = createStore(\r\n  RootReducer,\r\n  composeWithDevTools(),\r\n)\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"app\">\r\n        <Header />\r\n        <FriendLists />\r\n        <ModalFriend />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}